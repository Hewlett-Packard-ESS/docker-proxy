visible_hostname squid.docker.local

access_log /var/log/squid/access.log
cache_log /var/log/squid/cache.log
cache_store_log /var/log/squid/store.log
coredump_dir /var/cache/squid

<% if @confvars[:tdns_enabled] === true %>
dns_nameservers 127.0.0.1
hosts_file none
<% end %>

# debug_options ALL,3

# Define our acls
acl SSL_ports port 443
acl Safe_ports port 80          # http
acl Safe_ports port 443         # https
acl CONNECT method CONNECT

# Remove pointless headers
request_header_access X-Forwarded-For deny all
request_header_access Via deny all

<% if !@confvars[:cachePeer].nil? %>
# Setup our cache peer
cache_peer <%= @confvars[:cachePeer] %> parent <%= @confvars[:cachePeerPort] %> 0 no-query no-digest originserver 
<% end%>

# define our local subnet
acl localnet dst 10.0.0.0/8     # RFC1918 possible internal network
acl localnet dst 172.16.0.0/12  # RFC1918 possible internal network
acl localnet dst 192.168.0.0/16 # RFC1918 possible internal network
acl localnet dst fc00::/7       # RFC 4193 local private network range
acl localnet dst fe80::/10      # RFC 4291 link-local (directly plugged) machines
<% @confvars[:localServers].each do |server| %>
acl localnet dst <%= server %>
<% end %>

<% if !@confvars[:cachePeer].nil? %>
# Always go direct to local servers we can access
always_direct allow localnet

# Otherwise go via the cache peer INSECURELY (http)
never_direct allow all
<% else %>
# As no cache peer is defined, we always want to go direct
always_direct allow all
<% end %>

http_access deny !Safe_ports
http_access deny CONNECT !SSL_ports
http_access allow localhost manager
http_access deny manager
http_access allow localhost
http_access allow all

http_port 3128
http_port 3129 intercept
https_port 3130 intercept ssl-bump generate-host-certificates=on dynamic_cert_mem_cache_size=4MB cert=/etc/squid/ssl_cert/cert.pem key=/etc/squid/ssl_cert/key.pem

<% if !@confvars[:cachePeer].nil? %>
# Always go direct to local servers we can access
# For local servers, do a server-first approach
ssl_bump server-first localnet
# For peer servers, do a client first approach
ssl_bump client-first all
<% else %>
# As no cache peer is defined, we want to do ssl-bumps server first (the most secure way)
ssl_bump server-first all
<% end %>

# Some more, rather insecure options
<% if @confvars[:insecure] === true %>
sslproxy_flags DONT_VERIFY_PEER
sslproxy_cert_error allow all
<% end %>

# Configure the ssl_crtd workers
sslcrtd_program /usr/lib/squid/ssl_crtd -s /var/lib/ssl_db -M 4MB
sslcrtd_children 8 startup=1 idle=1

# Setup the cache
cache allow all
maximum_object_size 512 MB
cache_dir ufs /var/cache/squid 5000 16 256
cache_mem 200 MB
maximum_object_size_in_memory 100 MB
cache_replacement_policy heap LFUDA
refresh_pattern Packages\.bz2$ 0       20%     4320 refresh-ims
refresh_pattern Sources\.bz2$  0       20%     4320 refresh-ims
refresh_pattern Release\.gpg$  0       20%     4320 refresh-ims
refresh_pattern Release$       0       20%     4320 refresh-ims
refresh_pattern -i .(udeb|tar.gz|deb|rpm|exe|zip|tar|tgz|bz2|ram|rar|bin)$  129600 100% 129600 override-expire ignore-no-cache ignore-no-store
refresh_pattern .              0       20%     4320
